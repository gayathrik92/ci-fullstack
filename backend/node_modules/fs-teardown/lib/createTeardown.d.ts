export interface TeardownControls {
    prepare: () => Promise<string[] | void>;
    cleanup: () => Promise<void>;
    getPath: (...segments: string[]) => string;
    editFile: (filePath: string, nextContents: string) => void;
    removeFile: (filePath: string) => void;
}
export interface TeardownOperation {
    (ctx: string): Promise<string>;
}
/**
 * Creates a file at the given relative path with an optional content.
 */
export declare function addFile(filePath: string, content?: string | Record<string, unknown>): TeardownOperation;
/**
 * Creates a directory at the given path with optional list of operations
 * to perform in the newly created directory.
 */
export declare function addDirectory(dirPath: string, ...operations: TeardownOperation[]): TeardownOperation;
export declare function createTeardown(baseDir: string, ...operations: TeardownOperation[]): TeardownControls;
